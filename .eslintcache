[{"/home/minnat/React-Typescript/jsx-editor/src/index.tsx":"1","/home/minnat/React-Typescript/jsx-editor/src/components/cell-list.tsx":"2","/home/minnat/React-Typescript/jsx-editor/src/state/index.ts":"3","/home/minnat/React-Typescript/jsx-editor/src/hooks/use-typed-selectors.ts":"4","/home/minnat/React-Typescript/jsx-editor/src/components/cell-list-item.tsx":"5","/home/minnat/React-Typescript/jsx-editor/src/components/add-cell.tsx":"6","/home/minnat/React-Typescript/jsx-editor/src/state/store.ts":"7","/home/minnat/React-Typescript/jsx-editor/src/state/cell.ts":"8","/home/minnat/React-Typescript/jsx-editor/src/state/action-creators/index.ts":"9","/home/minnat/React-Typescript/jsx-editor/src/hooks/use-action.ts":"10","/home/minnat/React-Typescript/jsx-editor/src/components/text-editor.tsx":"11","/home/minnat/React-Typescript/jsx-editor/src/components/action-bar.tsx":"12","/home/minnat/React-Typescript/jsx-editor/src/components/code-cell.tsx":"13","/home/minnat/React-Typescript/jsx-editor/src/state/reducers/index.ts":"14","/home/minnat/React-Typescript/jsx-editor/src/hooks/use-cumulative-code.ts":"15","/home/minnat/React-Typescript/jsx-editor/src/components/code-editor.tsx":"16","/home/minnat/React-Typescript/jsx-editor/src/components/resizable.tsx":"17","/home/minnat/React-Typescript/jsx-editor/src/components/preview.tsx":"18","/home/minnat/React-Typescript/jsx-editor/src/state/reducers/bundleReducers.ts":"19","/home/minnat/React-Typescript/jsx-editor/src/state/reducers/cellsReducer.ts":"20","/home/minnat/React-Typescript/jsx-editor/src/bundler/index.ts":"21","/home/minnat/React-Typescript/jsx-editor/src/state/action-types/index.ts":"22","/home/minnat/React-Typescript/jsx-editor/src/bundler/plugins/unpkg-path-plugin.ts":"23","/home/minnat/React-Typescript/jsx-editor/src/bundler/plugins/frtch-plugins.ts":"24"},{"size":557,"mtime":1675584429896,"results":"25","hashOfConfig":"26"},{"size":728,"mtime":1675584429896,"results":"27","hashOfConfig":"26"},{"size":170,"mtime":1675584429896,"results":"28","hashOfConfig":"26"},{"size":183,"mtime":1675584429896,"results":"29","hashOfConfig":"26"},{"size":741,"mtime":1675584429896,"results":"30","hashOfConfig":"26"},{"size":1096,"mtime":1675584429896,"results":"31","hashOfConfig":"26"},{"size":556,"mtime":1675584429896,"results":"32","hashOfConfig":"26"},{"size":119,"mtime":1675584429896,"results":"33","hashOfConfig":"26"},{"size":1464,"mtime":1675584429896,"results":"34","hashOfConfig":"26"},{"size":333,"mtime":1675584429896,"results":"35","hashOfConfig":"26"},{"size":1349,"mtime":1675584429896,"results":"36","hashOfConfig":"26"},{"size":998,"mtime":1675584429896,"results":"37","hashOfConfig":"26"},{"size":2084,"mtime":1675584429896,"results":"38","hashOfConfig":"26"},{"size":303,"mtime":1675584429896,"results":"39","hashOfConfig":"26"},{"size":1170,"mtime":1675584429896,"results":"40","hashOfConfig":"26"},{"size":2200,"mtime":1675668470643,"results":"41","hashOfConfig":"26"},{"size":1837,"mtime":1675584429896,"results":"42","hashOfConfig":"26"},{"size":1659,"mtime":1675584429896,"results":"43","hashOfConfig":"26"},{"size":841,"mtime":1675584429896,"results":"44","hashOfConfig":"26"},{"size":3304,"mtime":1675669154668,"results":"45","hashOfConfig":"26"},{"size":1093,"mtime":1675584429896,"results":"46","hashOfConfig":"26"},{"size":231,"mtime":1675584429896,"results":"47","hashOfConfig":"26"},{"size":990,"mtime":1675584429896,"results":"48","hashOfConfig":"26"},{"size":1985,"mtime":1675584429896,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1stkq0l",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/home/minnat/React-Typescript/jsx-editor/src/index.tsx",[],["102","103"],"/home/minnat/React-Typescript/jsx-editor/src/components/cell-list.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/state/index.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/hooks/use-typed-selectors.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/components/cell-list-item.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/components/add-cell.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/state/store.ts",["104","105"],"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { ActionTypes } from './action-types';\nimport reducers from './reducers';\nimport { useActions } from '../hooks/use-action'; \n\nexport const store = createStore(reducers, {}, applyMiddleware(thunk));\n\n// store.dispatch({\n//   type: ActionTypes.INSERT_CELL_AFTER,\n//   payload: {\n//     id: null,\n//     type: 'code', \n//   }\n// })\n\n// store.dispatch({\n//   type: ActionTypes.INSERT_CELL_AFTER,\n//   payload: {\n//     id: null,\n//     type: 'text', \n//   }\n// });\n\n","/home/minnat/React-Typescript/jsx-editor/src/state/cell.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/state/action-creators/index.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/hooks/use-action.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/components/text-editor.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/components/action-bar.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/components/code-cell.tsx",["106"],"import { useEffect } from 'react';\nimport './code-cell.css';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\n// import bundle from '../bundler';\nimport Resizable from './resizable';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/use-action';\nimport { useTypedSelector } from '../hooks/use-typed-selectors';\nimport { useCumulativeCode } from '../hooks/use-cumulative-code';\n\ninterface CodeCellProps {\n  cell: Cell;\n}\n\nconst CodeCell: React.FC<CodeCellProps> = ({ cell }) => {\n  // const [code, setCode] = useState('');\n  // const [err, setErr] = useState('');\n  const { updateCell, createBundle } = useActions();\n  const bundle = useTypedSelector((state) => state.bundles[cell.id])\n\n  const cummulativeCode = useCumulativeCode(cell.id);\n\n  useEffect(() => {\n    if(!bundle) {\n      createBundle(cell.id, cummulativeCode);\n      return;\n    }\n\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, cummulativeCode)\n      // const output = await bundle(cell.content);\n      // setCode(output.code);\n      // setErr(output.err);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    }\n  }, [cummulativeCode, cell.id, createBundle]);\n\n  return (\n    <Resizable direction='vertical'>\n      <div style={{ height: 'calc(100% - 10px)', display: 'flex', flexDirection: 'row' }}>\n        <Resizable direction='horizontal'>\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value )}\n          />\n        </Resizable>\n        <div className='progress-wrapper'>\n          {!bundle || bundle.loading ? (\n            <div className='progress-cover'>\n              <progress className='progress is-small is-primary' max={100}>\n                Loading\n              </progress>\n            </div>\n            ) : (<Preview code={bundle?.code} isErrorInBundling={bundle?.err} />)\n          }\n         </div>\n        {/* {bundle && <Preview code={bundle?.code} isErrorInBundling={bundle?.err} />} */}\n      </div>\n  </Resizable>\n  );\n};\n\nexport default CodeCell;\n","/home/minnat/React-Typescript/jsx-editor/src/state/reducers/index.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/hooks/use-cumulative-code.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/components/code-editor.tsx",["107","108"],"import './code-editor.css';\nimport './syntax.css';\nimport { useRef } from 'react';\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\n// import prettier from 'prettier';\n// import parser from 'prettier/parser-babel';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter';\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n}\n\nconst CodeEditor: React.FC<CodeEditorProps> = ({ onChange, initialValue }) => {\n  const editorRef = useRef<any>();\n  const onEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor;\n    monacoEditor.onDidChangeModelContent(() => {\n      // console.log(getValue())\n      onChange(getValue());\n    })\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 })\n\n    const highlighter = new Highlighter(\n      // @ts-ignore\n      window.monaco,\n      codeShift,\n      monacoEditor\n    );\n    highlighter.highLightOnDidChangeModelContent(\n      () => {},\n      () => {},\n      undefined,\n      () => {}\n    );\n  }\n\n  const formatHandler = () => {\n    // get te current editor value\n    const unformatted = editorRef.current.getModel().getValue();\n\n    // format the current value\n    // const formatted = prettier.format(unformatted, {\n    //   parser: 'babel',\n    //   plugins: [parser],\n    //   useTabs: false,\n    //   semi: true,\n    //   singleQuote: true,\n    // }).replace(/\\n$/, '');\n\n    // set the new formatted value into editor\n    editorRef.current.setValue('');\n  }\n\n  return (\n    <div className='editor-wrapper'>\n      {/* <button\n        className='button button-format is-primary is-small'\n        onClick={formatHandler}\n      >\n        Format\n      </button> */}\n    <MonacoEditor\n      editorDidMount={onEditorDidMount}\n      value={initialValue}\n      language='javascript'\n      theme='dark'\n      height='100%'\n      options={{\n        wordWrap: 'on',\n        minimap: { enabled: false },\n        showUnused: false,\n        folding: false,\n        lineNumbersMinChars: 3,\n        fontSize: 16,\n        scrollBeyondLastLine: false,\n        automaticLayout: true,\n      }}\n    />\n    </div>\n  )\n};\n\nexport default CodeEditor;","/home/minnat/React-Typescript/jsx-editor/src/components/resizable.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/components/preview.tsx",[],"/home/minnat/React-Typescript/jsx-editor/src/state/reducers/bundleReducers.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/state/reducers/cellsReducer.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/bundler/index.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/state/action-types/index.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/bundler/plugins/unpkg-path-plugin.ts",[],"/home/minnat/React-Typescript/jsx-editor/src/bundler/plugins/frtch-plugins.ts",[],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":3,"column":10,"nodeType":"115","messageId":"116","endLine":3,"endColumn":21},{"ruleId":"113","severity":1,"message":"117","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":40,"column":6,"nodeType":"120","endLine":40,"endColumn":46,"suggestions":"121"},{"ruleId":"113","severity":1,"message":"122","line":40,"column":9,"nodeType":"115","messageId":"116","endLine":40,"endColumn":22},{"ruleId":"113","severity":1,"message":"123","line":42,"column":11,"nodeType":"115","messageId":"116","endLine":42,"endColumn":22},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"@typescript-eslint/no-unused-vars","'ActionTypes' is defined but never used.","Identifier","unusedVar","'useActions' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'bundle'. Either include it or remove the dependency array.","ArrayExpression",["126"],"'formatHandler' is assigned a value but never used.","'unformatted' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},"Update the dependencies array to be: [cummulativeCode, cell.id, createBundle, bundle]",{"range":"129","text":"130"},[1162,1202],"[cummulativeCode, cell.id, createBundle, bundle]"]